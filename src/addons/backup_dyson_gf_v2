subroutine dyson_gf(iter,bndrg,gf0,sigc,sigx,gf)
use modmain
use mod_linresp
use mod_addons_q
use mod_nrkp

implicit none
integer,intent(in) :: iter
integer,intent(in) :: bndrg(2,nspinor)
complex(8),intent(in) :: gf0(nstsv,lr_nw,nkptnrloc)
complex(8),intent(in) :: sigc(nbnd,nspinor,lr_nw,nkptnrloc,2)
real(8),intent(in) :: sigx(nbnd,nspinor,nkptnrloc,2)
complex(8), intent(out) :: gf(nstsv,lr_nw,nkptnrloc)
! local
integer :: iw1,iw2,iw3,iwp,iwr,ist,ikloc,info,i
complex(8) :: gtmp,ctmp,ztmp
! begin test
complex(8) :: gf0_aux(nbnd,lr_nw,nkptnrloc),gf_aux(nbnd,lr_nw,nkptnrloc)
complex(8) :: gf0_w(nbnd,gf_niw,nkptnrloc),gf_w(nbnd,gf_niw,nkptnrloc)
complex(8) :: sigc_w(nbnd,gf_niw,nkptnrloc)
complex(8) :: sigc1(nbnd,lr_nw,nkptnrloc)
complex(8) :: a1,a2,a3
integer :: iw,ik,isp1,ibnd,fbnd
character*100 :: fname,fname_tot,fspn
complex(8),external :: expola_tau
!end test

! Here, Hartree potential change is not considered yet
!
! assume the green function is diagonal at this moment
! beyond qpnb(1) and qpnb(2), Green's function is not updated

! begin test
gf(:,:,:)=gf0(:,:,:)

do isp1=1,nspinor
 ibnd=bndrg(1,isp1)
 fbnd=bndrg(2,isp1)

 do ist=ibnd,fbnd
  i=ist-ibnd+1
  gf0_aux(i,:,:)=gf0(ist,:,:)
 enddo

 call ft_tw3(1,-1,nbnd,lr_nw,nkptnrloc,gf_niw,gf0_aux(:,:,:),&
          &gf0_w)

 gf_w(:,:,:)=gf0_w(:,:,:)
 sigc1(:,:,:)=sigc(:,isp1,:,:,1)-sigc(:,isp1,:,:,2)
 call ft_tw3(1,-1,nbnd,lr_nw,nkptnrloc,gf_niw,sigc1(:,:,:),&
          &sigc_w)

 do ikloc=1,nkptnrloc
  do iw=1,gf_niw
   do i=1,nbnd
    ctmp=zone-gf0_w(i,iw,ikloc)*(sigc_w(i,iw,ikloc)+&
        &sigx(i,isp1,ikloc,1)-sigx(i,isp1,ikloc,2))
    if (mpi_grid_root().and.(i.eq.nbnd)) then
     write(*,*) "iw,ctmp:",iw,ctmp
    endif
    gf_w(i,iw,ikloc)=gf_w(i,iw,ikloc)/ctmp
   enddo !i
  enddo !iw
 enddo !ikloc

! gf
 call ft_tw3(-1,-1,nbnd,gf_niw,nkptnrloc,lr_nw,gf_w(:,:,:),&
          &gf_aux(:,:,:))

! corrections made at both ends (0 and \beta) due to error from Fourier
! transformation
 do ikloc=1,nkptnrloc
  do i=1,nbnd
   ! for G(0+)
   gf_aux(i,1,ikloc)=expola_tau(lr_w(1),lr_w(2),lr_w(3),lr_w(4),&
                  &gf_aux(i,2,ikloc),gf_aux(i,3,ikloc),gf_aux(i,4,ikloc))
   ! for G(\beta-)
   gf_aux(i,lr_nw,ikloc)=expola_tau(lr_w(lr_nw),lr_w(lr_nw-1),&
                &lr_w(lr_nw-2),lr_w(lr_nw-3),gf_aux(i,lr_nw-1,ikloc),&
                &gf_aux(i,lr_nw-2,ikloc),gf_aux(i,lr_nw-3,ikloc))
  enddo
 enddo

 do ist=ibnd,fbnd
  i=ist-ibnd+1
  gf(ist,:,:)=gf_aux(i,:,:)
 enddo
enddo !isp1

! gf_w
if (mpi_grid_root((/dim_q/))) then
 do ikloc=1,nkptnrloc
  ik=mpi_grid_map(nkptnr,dim_k,loc=ikloc)
  write(fname,'("gf_iw_I",I1.1,"_k",I4.4)') iter,ik
  do ist=qpnb(1),qpnb(2)
   write(fspn,'("_ist",I3.3)') ist
   fname_tot=trim(adjustl(fname))//trim(adjustl(fspn))
   open(168,file=fname_tot,action='write',form="FORMATTED",status="REPLACE")
   do iw=1,gf_niw
     write(168,'(3G18.8)') iw,dreal(gf_w(ist,iw,ikloc)),&
                         &dimag(gf_w(ist,iw,ikloc))
   enddo
   close(168)
  enddo !ist
 enddo !ikloc
endif

! gf
if (mpi_grid_root((/dim_q/))) then
 do ikloc=1,nkptnrloc
  ik=mpi_grid_map(nkptnr,dim_k,loc=ikloc)
  write(fname,'("gf_tau_I",I1.1,"_k",I4.4)') iter,ik
  do ist=qpnb(1),qpnb(2)
   write(fspn,'("_ist",I3.3)') ist
   fname_tot=trim(adjustl(fname))//trim(adjustl(fspn))
   open(168,file=fname_tot,action='write',form="FORMATTED",status="REPLACE")
   do iw=1,lr_nw
     write(168,'(3G18.8)') dreal(lr_w(iw))/ha2ev,dreal(gf(ist,iw,ikloc)),&
                         &dimag(gf(ist,iw,ikloc))
   enddo
   close(168)
  enddo !ist
 enddo !ikloc
endif

! test
call ft_tw3(1,-1,nbnd,lr_nw,nkptnrloc,gf_niw,gf_aux(:,:,:),&
          &gf_w(:,:,:))

call ft_tw3(-1,-1,nbnd,gf_niw,nkptnrloc,lr_nw,gf_w(:,:,:),&
          &gf_aux(:,:,:))

if (mpi_grid_root((/dim_q/))) then
 do ikloc=1,nkptnrloc
  ik=mpi_grid_map(nkptnr,dim_k,loc=ikloc)
  write(fname,'("gf_tau2_I",I1.1,"_k",I4.4)') iter,ik
  do ist=qpnb(1),qpnb(2)
   i=ist-qpnb(1)+1
   write(fspn,'("_ist",I3.3)') ist
   fname_tot=trim(adjustl(fname))//trim(adjustl(fspn))
   open(168,file=fname_tot,action='write',form="FORMATTED",status="REPLACE")
   do iw=1,lr_nw
     write(168,'(3G18.8)') dreal(lr_w(iw))/ha2ev,dreal(gf_aux(i,iw,ikloc)),&
                         &dimag(gf_aux(i,iw,ikloc))
   enddo
   close(168)
  enddo !ist
 enddo !ikloc
endif

! end test

return
end subroutine

complex(8) function expola_tau(x0,x1,x2,x3,f1,f2,f3)
use modmain
use mod_linresp
!
implicit none
complex(8),intent(in) :: x0
complex(8),intent(in) :: x1
complex(8),intent(in) :: x2
complex(8),intent(in) :: x3
complex(8),intent(in) :: f1
complex(8),intent(in) :: f2
complex(8),intent(in) :: f3
!
complex(8) :: a1,a2,a3

a1=(f3-f2)/(x3-x2)-(f2-f1)/(x2-x1)
a1=a1/(x3-x1)
a2=(f3-f2)/(x3-x2)-a1*(x3+x2)
a3=f3-a1*x3**2-a2*x3

expola_tau=a1*x0**2+a2*x0+a3

return
end function expola_tau





