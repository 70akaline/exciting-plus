subroutine dyson_gf(iter,bndrg,gf0,sigc,exxnk,vxcnk,vclnk,gf)
use modmain
use mod_linresp
use mod_addons_q
use mod_nrkp

implicit none
integer,intent(in) :: iter
integer,intent(in) :: bndrg(2,nspinor)
real(8),intent(in) :: gf0(nstsv,lr_nw,nkptnrloc)
real(8),intent(in) :: sigc(nbnd,nspinor,lr_nw,nkptnrloc)
real(8),intent(in) :: exxnk(nbnd,nspinor,nkptnrloc)
real(8),intent(in) :: vxcnk(nbnd,nspinor,nkptnrloc)
real(8),intent(in) :: vclnk(nbnd,nspinor,nkptnrloc)
real(8), intent(out) :: gf(nstsv,lr_nw,nkptnrloc)
! local
integer :: iw1,iw2,iw3,iwp,iwr,ist,ikloc,info,i,nw,sgn
complex(8) :: gtmp,ctmp
real(8) :: ztmp,dw1,dele,dele_prev
! begin test
real(8) :: gf0_aux(nbnd,lr_nw,nkptnrloc),gf_aux(nbnd,lr_nw,nkptnrloc)
real(8) :: nelec0,nelec1,dw0,d
complex(8) :: gf0_auxc(nbnd,lr_nw,nkptnrloc),gf_auxc(nbnd,lr_nw,nkptnrloc)
complex(8) :: gf0_w(nbnd,niw,nkptnrloc),gf_w(nbnd,niw,nkptnrloc)
complex(8) :: sigc_w(nbnd,niw,nkptnrloc)
complex(8) :: sigc1(nbnd,lr_nw,nkptnrloc)
real(8) :: dw(lr_nw),dwr(lr_nw,lr_nw)
real(8) :: z1(lr_nw),z2(lr_nw)
real(8),external :: spline3_eval
real(8),allocatable :: amat(:,:),bmat(:),z_aux(:)
real(8),allocatable :: wd(:)
integer,allocatable :: ipiv(:)
integer :: iwmap(lr_nw,lr_nw)
integer :: iw,ik,isp1,ibnd,fbnd,ie
character*100 :: fname,fname_tot,fspn
logical :: flag
!end test

! Here, Hartree potential change is not considered yet
!
! assume the green function is diagonal at this moment
! beyond qpnb(1) and qpnb(2), Green's function is not updated

allocate(amat(lr_nw,lr_nw))
allocate(bmat(lr_nw))
allocate(z_aux(lr_nw))
allocate(ipiv(lr_nw))
amat=0.d0
bmat=0.d0
z_aux=0.d0
iwmap=0
ipiv=0
!
! finer grid points for z_aux
dw0=dreal(lr_w(2)-lr_w(1))
nw=int(dreal(lr_w(lr_nw))/dw0+0.1d0)+1
allocate(wd(nw))
!
! define a dense uniform grid
do iw=1,nw
 wd(iw)=dw0*(iw-1)
enddo

! calculate dw^{r}
dw(1)=dreal(lr_w(2)-lr_w(1))
dw(lr_nw)=dreal(lr_w(lr_nw)-lr_w(lr_nw-1))

do iw1=2,lr_nw-1
 dw(iw1)=dreal(lr_w(iw1+1)-lr_w(iw1-1))
enddo
dw(:)=dw(:)*0.5d0
! 
gf(:,:,:)=gf0(:,:,:)

! calculate the total number of electrons, should be conserved
nelec0=0.d0

do ikloc=1,nkptnrloc
 do ist=1,nstsv
   nelec0=nelec0-gf0(ist,lr_nw,ikloc)/nkptnr
 enddo
enddo

nelec0=nelec0*occmax
call mpi_grid_reduce(nelec0,1,dims=(/dim_k/),all=.true.)
if (mpi_grid_root()) write(*,'("initial # of electrons:",f8.4)') nelec0

flag=.true.
ie=0
dyson_mu=0.d0

do while (flag)
 ie=ie+1
 do ikloc=1,nkptnrloc
  do isp1=1,nspinor
   ibnd=bndrg(1,isp1)
   fbnd=bndrg(2,isp1)
   do ist=ibnd,fbnd
    i=ist-ibnd+1
    ! evaluate Z(\tau1,\tau2)=Z(\tau1-\tau2)
    ! exchange part
    do iw1=1,lr_nw
      z_aux(iw1)=gf0(ist,iw1,ikloc)*(exxnk(i,isp1,ikloc) &
               & -vxcnk(i,isp1,ikloc)+vclnk(i,isp1,ikloc)-dyson_mu)
    enddo !iw1

    ! cubic spline interlation for gf0 and sigc
    call spline3_coef(lr_nw-1,dreal(lr_w(:)),gf0(ist,:,ikloc),z1(:))
    call spline3_coef(lr_nw-1,dreal(lr_w(:)),sigc(i,isp1,:,ikloc),z2(:))

    ! correlation part
    call cal_zaux(nw,gf0(ist,:,ikloc),sigc(i,isp1,:,ikloc),z1(:),&
                & z2(:),z_aux)
   
    ! cubic spline for z_aux as well
    call spline3_coef(lr_nw-1,dreal(lr_w(:)),z_aux(:),z2(:))

    ! test
    if (mpi_grid_root().and.ikloc.eq.1.and.ist.eq.4) then
     write(*,*) "interpolated z_aux:"
     do iw1=1,4*lr_nw-3
       dw1=dreal(lr_w(lr_nw))/(4*lr_nw-4)*(iw1-1)
       d=spline3_eval(lr_nw-1,dreal(lr_w(:)),z_aux(:),z2(:),dw1)
       write(*,*) dw1,d
     enddo
     write(*,*) " "
     write(*,*) "initial z_aux:"
     do iw1=1,lr_nw
      write(*,*) dreal(lr_w(iw1)),z_aux(iw1)
     enddo
    endif

    ! amat(\tau1,\tau2)
    do iw2=1,lr_nw
      do iw1=1,lr_nw
       sgn=1
       dw1=dreal(lr_w(iw1)-lr_w(iw2))
       if (dw1.lt.-1.d-8) then
        dw1=dw1+bhbar
        sgn=-1
       endif
       ztmp=spline3_eval(lr_nw-1,dreal(lr_w(:)),z_aux(:),z2(:),dw1)
       amat(iw1,iw2)=-sgn*ztmp*dw(iw2)    
       if (iw1.eq.iw2) amat(iw1,iw2)=amat(iw1,iw2)+1.d0
      enddo ! iw1
    enddo !iw2

    bmat(:)=gf0(ist,:,ikloc)
    ! solve for dressed Green function
    call dgesv(lr_nw,1,amat(1,1),lr_nw,ipiv,bmat(1),lr_nw,info)
    if (info.ne.0) write(*,*) "info.ne.0!",info
    gf(ist,:,ikloc)=bmat(:)
   enddo !ist
  enddo !isp1
 enddo !ikloc

 ! calculate the number of electrons from gf
 nelec1=0.d0
 do ikloc=1,nkptnrloc
  do ist=1,nstsv
    nelec1=nelec1-gf(ist,lr_nw,ikloc)/nkptnr
  enddo
 enddo

 nelec1=nelec1*occmax
 call mpi_grid_reduce(nelec1,1,dims=(/dim_k/),all=.true.)
 if (mpi_grid_root()) write(*,'("# of electrons:",f8.4,1X,I4)') nelec1,iter

 dele=nelec1-nelec0

 if (abs(nelec1-nelec0).lt.1.d-3.or.i.gt.50.or.&
    &dele_prev*dele.lt.-1.d-8) then
   flag=.false.
 else
   ! adjust the chemical potential
   dyson_mu=dyson_mu-0.2d0*dele
   dele_prev=dele
 endif

 if (mpi_grid_root()) write(*,'("dyson_mu:",f8.4,1X,I4)') dyson_mu,ie
 if (mpi_grid_root()) write(*,'("nelec1-nelec0:",f8.4,1X,I4)') dele,ie
enddo

! gf
if (mpi_grid_root((/dim_q/))) then
 do ikloc=1,nkptnrloc
  ik=mpi_grid_map(nkptnr,dim_k,loc=ikloc)
  write(fname,'("gf_tau_I",I1.1,"_k",I4.4)') iter,ik
  do ist=qpnb(1),qpnb(2)
   write(fspn,'("_ist",I3.3)') ist
   fname_tot="Green_func/"//trim(adjustl(fname))//trim(adjustl(fspn))
   open(168,file=fname_tot,action='write',form="FORMATTED",status="REPLACE")
   do iw=1,lr_nw
     write(168,'(2G18.8)') dreal(lr_w(iw))/ha2ev,gf(ist,iw,ikloc)
   enddo
   close(168)
  enddo !ist
 enddo !ikloc
endif

!!!!!!!!!!!!!!!!!!!!!!!!
! begin test
do ist=qpnb(1),qpnb(2)
 i=ist-qpnb(1)+1
 gf_aux(i,:,:)=gf(ist,:,:)
enddo

!G(iw)
gf_auxc(:,:,:)=dcmplx(gf_aux(:,:,:))
call ft_tw3(1,-1,nbnd,lr_nw,nkptnrloc,niw,gf_auxc(:,:,:),gf_w)

! gf_w
if (mpi_grid_root((/dim_q/))) then
 do ikloc=1,nkptnrloc
  ik=mpi_grid_map(nkptnr,dim_k,loc=ikloc)
  write(fname,'("gf_iw1_I",I1.1,"_k",I4.4)') iter,ik
  do ist=qpnb(1),qpnb(2)
   i=ist-qpnb(1)+1
   write(fspn,'("_ist",I3.3)') ist
   fname_tot="Green_func/"//trim(adjustl(fname))//trim(adjustl(fspn))
   open(168,file=fname_tot,action='write',form="FORMATTED",status="REPLACE")
   do iw=1,niw
     write(168,'(3G18.8)') iw,dreal(gf_w(i,iw,ikloc)),&
                         &dimag(gf_w(i,iw,ikloc))
   enddo
   close(168)
  enddo !ist
 enddo !ikloc
endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!
! begin test2
!gf(:,:,:)=gf0(:,:,:)

do isp1=1,nspinor
 ibnd=bndrg(1,isp1)
 fbnd=bndrg(2,isp1)

 do ist=ibnd,fbnd
  i=ist-ibnd+1
  gf0_aux(i,:,:)=gf0(ist,:,:)
 enddo

 gf0_auxc(:,:,:)=dcmplx(gf0_aux(:,:,:))

 call ft_tw3(1,-1,nbnd,lr_nw,nkptnrloc,niw,gf0_auxc(:,:,:),&
          &gf0_w)

 gf_w(:,:,:)=gf0_w(:,:,:)
 sigc1(:,:,:)=dcmplx(sigc(:,isp1,:,:))
 call ft_tw3(1,-1,nbnd,lr_nw,nkptnrloc,niw,sigc1(:,:,:),&
          &sigc_w)

 do ikloc=1,nkptnrloc
  do iw=1,niw
   do i=1,nbnd
    ctmp=zone-gf0_w(i,iw,ikloc)*(sigc_w(i,iw,ikloc)+exxnk(i,isp1,ikloc)&
         &-vxcnk(i,isp1,ikloc)+vclnk(i,isp1,ikloc)-dyson_mu)
    if (mpi_grid_root().and.(i.eq.nbnd)) then
     write(*,*) "iw,ctmp:",iw,ctmp
    endif
    gf_w(i,iw,ikloc)=gf_w(i,iw,ikloc)/ctmp
   enddo !i
  enddo !iw
 enddo !ikloc

enddo !isp1

! gf_w
if (mpi_grid_root((/dim_q/))) then
 do ikloc=1,nkptnrloc
  ik=mpi_grid_map(nkptnr,dim_k,loc=ikloc)
  write(fname,'("gf_iw2_I",I1.1,"_k",I4.4)') iter,ik
  do ist=qpnb(1),qpnb(2)
   i=ist-qpnb(1)+1
   write(fspn,'("_ist",I3.3)') ist
   fname_tot="Green_func/"//trim(adjustl(fname))//trim(adjustl(fspn))
   open(168,file=fname_tot,action='write',form="FORMATTED",status="REPLACE")
   do iw=1,niw
     write(168,'(3G18.8)') iw,dreal(gf_w(i,iw,ikloc)),&
                         &dimag(gf_w(i,iw,ikloc))
   enddo
   close(168)
  enddo !ist
 enddo !ikloc
endif

! end test

deallocate(amat,z_aux,bmat,ipiv)
deallocate(wd)
return
end subroutine
